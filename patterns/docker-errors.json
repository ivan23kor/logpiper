{
  "patterns": [
    {
      "name": "docker_build_failure",
      "pattern": "(?:ERROR.*dockerfile|failed to solve|build failed.*docker)",
      "severity": "critical",
      "category": "build_failure",
      "description": "Docker build failure",
      "suggestedFix": "Check Dockerfile syntax and build context",
      "cooldownMs": 10000,
      "commands": ["docker", "docker-compose"]
    },
    {
      "name": "docker_daemon_error",
      "pattern": "(?:Cannot connect to the Docker daemon|docker: command not found|Docker is not running)",
      "severity": "critical",
      "category": "system_error",
      "description": "Docker daemon connection issue",
      "suggestedFix": "Start Docker daemon or check Docker installation",
      "cooldownMs": 30000,
      "commands": ["docker", "docker-compose"]
    },
    {
      "name": "container_startup_error",
      "pattern": "(?:Container.*exited with code|Container failed to start|Error response from daemon)",
      "severity": "high",
      "category": "runtime_error",
      "description": "Container startup failure",
      "suggestedFix": "Check container logs and configuration",
      "cooldownMs": 15000,
      "commands": ["docker", "docker-compose"]
    },
    {
      "name": "image_not_found",
      "pattern": "(?:Unable to find image|pull access denied|repository does not exist)",
      "severity": "high",
      "category": "dependency_error",
      "description": "Docker image not found",
      "suggestedFix": "Check image name and registry accessibility",
      "cooldownMs": 20000,
      "commands": ["docker", "docker-compose"]
    },
    {
      "name": "volume_mount_error",
      "pattern": "(?:invalid mount config|no such file or directory.*volume|Error.*bind mount)",
      "severity": "medium",
      "category": "configuration_error",
      "description": "Volume mount error",
      "suggestedFix": "Check volume paths and permissions",
      "cooldownMs": 15000,
      "commands": ["docker", "docker-compose"]
    },
    {
      "name": "port_binding_error",
      "pattern": "(?:port is already allocated|bind.*address already in use)",
      "severity": "medium",
      "category": "configuration_error",
      "description": "Port binding conflict",
      "suggestedFix": "Use different port or stop conflicting service",
      "cooldownMs": 20000,
      "commands": ["docker", "docker-compose"]
    },
    {
      "name": "compose_service_error",
      "pattern": "(?:ERROR.*service.*|depends_on.*failed|Service.*unhealthy)",
      "severity": "high",
      "category": "runtime_error",
      "description": "Docker Compose service error",
      "suggestedFix": "Check service dependencies and health checks",
      "cooldownMs": 15000,
      "commands": ["docker-compose"]
    },
    {
      "name": "registry_error",
      "pattern": "(?:authentication required|unauthorized|registry.*error)",
      "severity": "medium",
      "category": "authentication_error",
      "description": "Docker registry authentication error",
      "suggestedFix": "Login to registry or check credentials",
      "cooldownMs": 25000,
      "commands": ["docker", "docker-compose"]
    }
  ]
}